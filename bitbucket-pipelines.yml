# Za okolje lahko uporabimo poljuben Docker, ki je na voljo na
# Docker Hub <https://hub.docker.com/>
image: node:6.9.4

# Za posredovanje produkcijske razlièice aplikacije na Heroku
# moramo izvesti celostno kloniranje
clone:
  depth:
    full

pipelines:
  branches:
    # Ko posredujemo uveljavitev na vejo razvoja `master` se
    # izvede neprekinjena integracija (CI), ki izvede vse teste
    production:
      - step:
          name: build and publish docker image
          services:
            - docker
          caches:
            - docker
          script:
            - docker build -t $APP_NAME .
            - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
            - docker tag $APP_NAME registry.heroku.com/$APP_NAME/web
            - docker push registry.heroku.com/$APP_NAME/web
            - docker inspect registry.heroku.com/$APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID
          artifacts:
            - WEB_DOCKER_IMAGE_ID
      - step:
          name: deploy-to-heroku
          deployment: staging
          script:
            - export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID)
            - ./deploy.sh
            - echo "Done..."
            
  custom:
    # Roèna zahteva za izvedbo postavitve, ki izvede vse teste
    # in posreduje aplikacijo na Heroku
    rocna-postavitev:
      - step:
          caches:
            - node
          script:
            - npm install
            - npm test